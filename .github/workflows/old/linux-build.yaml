name: Linux Builder

on:
  repository_dispatch:
    types: [deploy_linux]
  workflow_call:
    inputs:
      MONO:
        description: 'Is this a Mono Workflow?'
        required: true
        type: number
        default: 0

env:
  GODOT_SDK_LINUX_X86_64: /root/x86_64-godot-linux-gnu_sdk-buildroot
  GODOT_SDK_LINUX_X86_32: /root/i686-godot-linux-gnu_sdk-buildroot
  GODOT_SDK_LINUX_ARM64: /root/aarch64-godot-linux-gnu_sdk-buildroot
  GODOT_SDK_LINUX_ARM32: /root/arm-godot-linux-gnueabihf_sdk-buildroot
  SCONSFLAGS: verbose=yes warnings=no progress=no
  TERM: xterm
  PLATFORM: linuxbsd
  MONO: ${{ inputs.MONO }}

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    container:
      image: bioblaze/blazium-linux:latest
    strategy:
      matrix:
        include: 
          - name: Linux X86_64
            path: /root/x86_64-godot-linux-gnu_sdk-buildroot
            type: x86_64
          # - name: Linux X86_32
          #   path: /root/i686-godot-linux-gnu_sdk-buildroot
          #   type: x86_32
          - name: Linux ARM64
            path: /root/aarch64-godot-linux-gnu_sdk-buildroot
            type: arm64
          # - name: Linux ARM32
          #   path: /root/arm-godot-linux-gnueabihf_sdk-buildroot
          #   type: arm32
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: blazium-engine/blazium
          ref: ${{ github.event.client_payload.branch }}
          fetch-depth: 1
          
      - name: Get BASE_PATH
        id: pathing
        run: |
            echo "BASE_PATH=$PATH" >> "$GITHUB_OUTPUT"

      - name: Setup Artifact Naming Scheme
        id: naming
        run: |
          if [ "$MONO" -eq 1 ]; then
            echo "BASE_NAME=$PLATFORM-${{ matrix.type }}-mono" >> "$GITHUB_OUTPUT"
            echo "STEP_NAME=${{ matrix.name }}/w Mono" >> "$GITHUB_OUTPUT"
          else
            echo "BASE_NAME=$PLATFORM-${{ matrix.type }}" >> "$GITHUB_OUTPUT"
            echo "STEP_NAME=${{ matrix.name }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Download Mono Glue
        if: ${{ inputs.MONO == 1 }}
        uses: actions/download-artifact@v3
        with:
          name: mono-glue
          path: /root/mono-glue

      - name: Setup Mono Glue
        if: ${{ inputs.MONO == 1 }}
        run: |
          cp -r /root/mono-glue/GodotSharp/GodotSharp/Generated modules/mono/glue/GodotSharp/GodotSharp/
          cp -r /root/mono-glue/GodotSharp/GodotSharpEditor/Generated modules/mono/glue/GodotSharp/GodotSharpEditor/

      - name: Setup Path for ${{ steps.naming.outputs.STEP_NAME }}
        run: |
          //export PATH="/root/i686-godot-linux-gnu_sdk-buildroot/bin:$PATH"
          echo "${{ matrix.path }}/bin" >> "$GITHUB_PATH"

      - name: Build for ${{ steps.naming.outputs.STEP_NAME }} Editor
        run: |
          if [ "$MONO" -eq 1 ]; then
            scons platform=$PLATFORM arch=${{ matrix.type }} production=yes module_mono_enabled=yes target=editor use_static_cpp=no lto=none linker=mold
            ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=$PLATFORM
          else
            scons platform=$PLATFORM arch=${{ matrix.type }} production=yes target=editor use_static_cpp=no lto=none linker=mold
          fi

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.naming.outputs.BASE_NAME }}-tools
          path: ./bin

      - name: Cleaning Bin for ${{ steps.naming.outputs.STEP_NAME }}
        run: |
          rm -rf bin

      - name: Build for ${{ steps.naming.outputs.STEP_NAME }} Templates
        run: |
          if [ "$MONO" -eq 1 ]; then
            scons platform=$PLATFORM arch=${{ matrix.type }} production=yes module_mono_enabled=yes target=template_debug
            scons platform=$PLATFORM arch=${{ matrix.type }} production=yes module_mono_enabled=yes target=template_release
          else
            scons platform=$PLATFORM arch=${{ matrix.type }} production=yes target=template_debug
            scons platform=$PLATFORM arch=${{ matrix.type }} production=yes target=template_release
          fi

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.naming.outputs.BASE_NAME }}-templates
          path: ./bin

      - name: Cleaning Bin for ${{ steps.naming.outputs.STEP_NAME }} Templates
        run: rm -rf bin
