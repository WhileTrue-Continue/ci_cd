name: ðŸ¤– Android Builds
on:
  workflow_call:
    # inputs:
    #   mono_glue_run_id:
    #     description: "Mono-Glue runner ID"
    #     required: true
    #     type: string

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: blazium-dev
  SCONSFLAGS: verbose=yes warnings=extra werror=yes debug_symbols=no generate_apk=yes module_text_server_fb_enabled=yes
  BUILD_FLAG: ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }}
  TEMPLATE_TYPE: ${{ github.event.client_payload.production && 'template_release' || 'template_debug' }}
  BUILD_TYPE: ${{ github.event.client_payload.type || 'nightly' }}
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  TSAN_OPTIONS: suppressions=misc/error_suppressions/tsan.txt
  TERM: 'xterm'
  DISPLAY: ':0'
concurrency:
  group: ci-${{github.actor}}-${{ github.event.client_payload.type || 'nightly' }}-android
  cancel-in-progress: true

jobs:
   build-android:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=editor, arch=arm64, ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }})
            cache-name: android-editor-arm64
            target: editor
            tests: false
            sconsflags: arch=arm64 ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }}

          - name: Editor (target=editor, arch=arm32, ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }})
            cache-name: android-editor-arm32
            target: editor
            tests: false
            sconsflags: arch=arm32 ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }}

          - name: Editor (target=editor, arch=x86_64, ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }})
            cache-name: android-editor-x86_64
            target: editor
            tests: false
            sconsflags: arch=x86_64 ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }}

          - name: Editor (target=editor, arch=x86_32, ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }})
            cache-name: android-editor-x86_32
            target: editor
            tests: false
            sconsflags: arch=x86_32 ${{ github.event.client_payload.production && 'production=yes' || 'dev_build=yes' }}

          - name: Template (target=template_release, arch=arm64)
            cache-name: android-release-template-arm64
            target: template_release
            tests: false
            sconsflags: arch=arm64 

          - name: Template (target=template_debug, arch=arm32)
            cache-name: android-debug-template-arm32
            target: template_debug
            tests: false
            sconsflags: arch=arm32 

          - name: Template (target=template_debug, arch=arm64)
            cache-name: android-debug-template-arm64
            target: template_debug
            tests: false
            sconsflags: arch=arm64 

          - name: Template (target=template_release, arch=arm32)
            cache-name: android-release-template-arm32
            target: template_release
            tests: false
            sconsflags: arch=arm32 

          - name: Template (target=template_release, arch=x86_64)
            cache-name: android-template-x86_64
            target: template_release
            tests: false
            sconsflags: arch=x86_64 

          - name: Template (target=template_debug, arch=x86_64)
            cache-name: android-debug-template-x86_64
            target: template_debug
            tests: false
            sconsflags: arch=x86_64 

          - name: Template (target=template_release, arch=x86_32)
            cache-name: android-template-x86_32
            target: template_release
            tests: false
            sconsflags: arch=x86_32 

          - name: Template (target=template_debug, arch=x86_32)
            cache-name: android-debug-template-x86_32
            target: template_debug
            tests: false
            sconsflags: arch=x86_32 
# BREAK FOR MONO
          - name: Template/w Mono (target=template_release, arch=arm64, module_mono_enabled=yes)
            cache-name: android-release-template-arm64-mono
            target: template_release
            tests: false
            sconsflags: arch=arm64  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_debug, arch=arm32, module_mono_enabled=yes)
            cache-name: android-debug-template-arm32-mono
            target: template_debug
            tests: false
            sconsflags: arch=arm32  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_debug, arch=arm64, module_mono_enabled=yes)
            cache-name: android-debug-template-arm64-mono
            target: template_debug
            tests: false
            sconsflags: arch=arm64  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_release, arch=arm32, module_mono_enabled=yes)
            cache-name: android-release-template-arm32-mono
            target: template_release
            tests: false
            sconsflags: arch=arm32  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_release, arch=x86_64, module_mono_enabled=yes)
            cache-name: android-template-x86_64-mono
            target: template_release
            tests: false
            sconsflags: arch=x86_64  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_debug, arch=x86_64, module_mono_enabled=yes)
            cache-name: android-debug-template-x86_64-mono
            target: template_debug
            tests: false
            sconsflags: arch=x86_64  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_release, arch=x86_32, module_mono_enabled=yes)
            cache-name: android-template-x86_32-mono
            target: template_release
            tests: false
            sconsflags: arch=x86_32  module_mono_enabled=yes
            mono: true

          - name: Template/w Mono (target=template_debug, arch=x86_32, module_mono_enabled=yes)
            cache-name: android-debug-template-x86_32-mono
            target: template_debug
            tests: false
            sconsflags: arch=x86_32  module_mono_enabled=yes
            mono: true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: blazium-engine/blazium
          ref: ${{ github.event.client_payload.branch || env.GODOT_BASE_BRANCH }}
          submodules: recursive
          fetch-depth: 2

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Download and extract mono-glue
        if: matrix.mono
        run: |
          TYPE=${{ github.event.client_payload.type || 'nightly' }}
          URL="https://cdn.blazium.app/${TYPE}/mono-glue/mono-glue-${TYPE}.tar.gz"
          
          # Download the file
          curl -L $URL -o mono-glue.tar.gz

          # Create target directory if it doesn't exist
          mkdir -p modules/mono/glue/GodotSharp/GodotSharp/

          # Extract the tar.gz file to the target directory
          tar -xzvf mono-glue.tar.gz -C modules/mono/glue/GodotSharp/GodotSharp/

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: android
          target: ${{ matrix.target }}
          tests: ${{ matrix.tests }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Generate Godot templates
        if: matrix.target == 'template_release' || matrix.target == 'template_debug' 
        run: |
          cd platform/android/java
          ./gradlew generateGodotTemplates
          cd ../../..
          ls -l bin/

      - name: Generate Godot Meta editor
        if: matrix.target == 'editor'
        run: |
          cd platform/android/java
          ./gradlew generateGodotEditor
          cd ../../..
          ls -l bin/android_editor_builds/

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-${{ github.event.client_payload.type || 'nightly' }}

      - name: Clear folder
        run: |
          rm -rf bin/android_editor_builds/*

      - name: Generate Godot Meta editor
        if: matrix.target == 'editor'
        run: |
          cd platform/android/java
          ./gradlew generateGodotMetaEditor
          cd ../../..
          ls -l bin/android_editor_builds/

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-${{ github.event.client_payload.type || 'nightly' }}-meta
